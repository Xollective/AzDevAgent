name: RunnerDispatch
run-name: "Agents for ${{ inputs.buildNumber }}"
on:
  workflow_dispatch:
    inputs:
      runnerIds:
        description: "List of comma separated integer ids for the runners."
        required: true
        default: "1"
      buildNumber:
        description: "The requesting pipeline build number."
        required: true
        default: "unknown"
      image:
        description: "The vm image to run the agent with."
        required: true
        default: "windows-latest"
      pool:
        description: "The pool to add the agent."
        required: true
      agentName:
        description: "The name of the agent."
        required: false
        default: ''
      url:
        description: "The organization url to use for the agent."
        required: false
        default: ''
      taskUrl:
        description: "The annotated task url for the task. (e.g. $(System.CollectionUri)$(System.TeamProject)?buildId=$(Build.BuildId)&jobId=$(System.JobId)&planId=$(System.PlanId)&taskId=$(System.TaskInstanceId) )"
        required: false
        default: ''
      token:
        description: "The token to use for the agent."
        required: false
        default: ''
      operationId:
          description: "The operation ID to identify agents."
          required: false
          default: 'unspecified'
jobs:
  build:
    strategy:
      matrix:
        runnerId: ${{ fromJSON(format('[{0}]', inputs.runnerIds)) }}
    runs-on: ${{ inputs.image }}
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v2"
      - name: "Run Agent"
        shell: pwsh
        env:
          AZP_URL: ${{ secrets.AZP_URL }}
          AZP_TASK_URL: ${{ inputs.taskUrl }}
          AZP_AGENT_NAME: ${{ inputs.agentName }}${{ matrix.runnerId }}
          AZP_POOL: ${{ inputs.pool }}
          AZP_RUNNER_ID: ${{ runnerId }}
          AZP_RUNNER_IDS: "${{ inputs.runnerIds }}"
          # AZP_WORK: "C:/azdev/agent"
          Capability.OperationId: ${{ inputs.operationId }}
          Capability.Image: ${{ inputs.image }}
        run: |
          Get-ChildItem Env:
          $Env:AZP_TOKEN = "${{ inputs.token != '' && inputs.token || secrets.AZP_TOKEN }}"
          ./startup.ps1
